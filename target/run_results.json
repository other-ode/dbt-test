{"results": [{"node": {"raw_sql": "select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from `dbt-tutorial`.jaffle_shop.customers", "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "stg_customers"], "unique_id": "model.jaffle_shop.stg_customers", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "stg_customers.sql", "original_file_path": "models/stg_customers.sql", "name": "stg_customers", "resource_type": "model", "alias": "stg_customers", "checksum": {"name": "sha256", "checksum": "02b2e422e3a2b4ddf558783d76f68aeed7d456af28662f65ca075f253c4e6967"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "jaffle_shop": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "This model cleans up customer data", "columns": {"customer_id": {"name": "customer_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/stg_customers.sql", "deferred": false, "compiled_sql": "select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from `dbt-tutorial`.jaffle_shop.customers", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from `dbt-tutorial`.jaffle_shop.customers"}, "error": null, "status": null, "execution_time": 0.026659011840820312, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.498495Z", "completed_at": "2020-12-21T17:06:57.523728Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.524239Z", "completed_at": "2020-12-21T17:06:57.524258Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from `dbt-tutorial`.jaffle_shop.orders", "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "stg_orders"], "unique_id": "model.jaffle_shop.stg_orders", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "stg_orders.sql", "original_file_path": "models/stg_orders.sql", "name": "stg_orders", "resource_type": "model", "alias": "stg_orders", "checksum": {"name": "sha256", "checksum": "a8b96987bb181cdbeb8975c6ee03cffbe815f0de22b9a5a043abcb4180791736"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "jaffle_shop": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": [], "nodes": []}, "description": "This model cleans up order data", "columns": {"order_id": {"name": "order_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/stg_orders.sql", "deferred": false, "compiled_sql": "select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from `dbt-tutorial`.jaffle_shop.orders", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from `dbt-tutorial`.jaffle_shop.orders"}, "error": null, "status": null, "execution_time": 0.009701728820800781, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.525530Z", "completed_at": "2020-12-21T17:06:57.534128Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.534482Z", "completed_at": "2020-12-21T17:06:57.534492Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "schema_test/not_null_stg_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_stg_customers_customer_id", "resource_type": "test", "alias": "not_null_stg_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "jaffle_shop": null}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_stg_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `cool-evening-299014`.`dbt_david`.`stg_customers`\nwhere customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `cool-evening-299014`.`dbt_david`.`stg_customers`\nwhere customer_id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.020578861236572266, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.535927Z", "completed_at": "2020-12-21T17:06:57.554800Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.555327Z", "completed_at": "2020-12-21T17:06:57.555338Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('stg_customers') }}"}}, "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "schema_test", "unique_stg_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "schema_test/unique_stg_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "unique_stg_customers_customer_id", "resource_type": "test", "alias": "unique_stg_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "jaffle_shop": null}, "tags": ["schema"], "refs": [["stg_customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_stg_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `cool-evening-299014`.`dbt_david`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `cool-evening-299014`.`dbt_david`.`stg_customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.011307716369628906, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.557014Z", "completed_at": "2020-12-21T17:06:57.567047Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.567422Z", "completed_at": "2020-12-21T17:06:57.567431Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\n  config(\n    materialized='view'\n  )\n}}\n\nwith customers as (\n\n    select * from {{ ref('stg_customers') }}\n\n),\n\norders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "customers"], "unique_id": "model.jaffle_shop.customers", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "customers.sql", "original_file_path": "models/customers.sql", "name": "customers", "resource_type": "model", "alias": "customers", "checksum": {"name": "sha256", "checksum": "ca0c269c95d19176b385b3c39554fffb1e355c4751f19c8a16f31f923f10c9dd"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "jaffle_shop": null}, "tags": [], "refs": [["stg_customers"], ["stg_orders"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.jaffle_shop.stg_customers", "model.jaffle_shop.stg_orders"]}, "description": "Write a test that fails, for example, omit one of the order statuses in the accepted*values list. What does a failing test look like? Can you debug the failure?\nRun the tests for one model only. If you grouped your stg* models into a directory, try running the tests for all the models in that directory.\nUse a docs block to add a Markdown description to a model.", "columns": {"customer_id": {"name": "customer_id", "description": "Primary key", "meta": {}, "data_type": null, "quote": null, "tags": []}, "first_order_date": {"name": "first_order_date", "description": "NULL when a customer has not yet placed an order.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/schema.yml", "build_path": "target/compiled/jaffle_shop/models/customers.sql", "deferred": false, "compiled_sql": "\n\nwith customers as (\n\n    select * from `cool-evening-299014`.`dbt_david`.`stg_customers`\n\n),\n\norders as (\n\n    select * from `cool-evening-299014`.`dbt_david`.`stg_orders`\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n\nwith customers as (\n\n    select * from `cool-evening-299014`.`dbt_david`.`stg_customers`\n\n),\n\norders as (\n\n    select * from `cool-evening-299014`.`dbt_david`.`stg_orders`\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders\n\n    from orders\n\n    group by 1\n\n),\n\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from final"}, "error": null, "status": null, "execution_time": 0.01232004165649414, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.568498Z", "completed_at": "2020-12-21T17:06:57.579857Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.580134Z", "completed_at": "2020-12-21T17:06:57.580142Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "accepted_values", "kwargs": {"values": ["placed", "shipped", "completed", "return_pending", "returned"], "column_name": "status", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "schema_test", "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned"], "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "original_file_path": "models/schema.yml", "name": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "resource_type": "test", "alias": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "jaffle_shop": null}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from `cool-evening-299014`.`dbt_david`.`stg_orders`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from `cool-evening-299014`.`dbt_david`.`stg_orders`\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n", "column_name": "status"}, "error": null, "status": null, "execution_time": 0.01349496841430664, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.581326Z", "completed_at": "2020-12-21T17:06:57.593842Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.594127Z", "completed_at": "2020-12-21T17:06:57.594137Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "schema_test", "not_null_stg_orders_order_id"], "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "schema_test/not_null_stg_orders_order_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_stg_orders_order_id", "resource_type": "test", "alias": "not_null_stg_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "jaffle_shop": null}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_stg_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `cool-evening-299014`.`dbt_david`.`stg_orders`\nwhere order_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `cool-evening-299014`.`dbt_david`.`stg_orders`\nwhere order_id is null\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.010195016860961914, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.595215Z", "completed_at": "2020-12-21T17:06:57.604203Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.604519Z", "completed_at": "2020-12-21T17:06:57.604527Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "order_id", "model": "{{ ref('stg_orders') }}"}}, "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "schema_test", "unique_stg_orders_order_id"], "unique_id": "test.jaffle_shop.unique_stg_orders_order_id", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "schema_test/unique_stg_orders_order_id.sql", "original_file_path": "models/schema.yml", "name": "unique_stg_orders_order_id", "resource_type": "test", "alias": "unique_stg_orders_order_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "jaffle_shop": null}, "tags": ["schema"], "refs": [["stg_orders"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.stg_orders"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_stg_orders_order_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from `cool-evening-299014`.`dbt_david`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from `cool-evening-299014`.`dbt_david`.`stg_orders`\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "order_id"}, "error": null, "status": null, "execution_time": 0.011527061462402344, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.606456Z", "completed_at": "2020-12-21T17:06:57.616682Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.616969Z", "completed_at": "2020-12-21T17:06:57.616978Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "not_null", "kwargs": {"column_name": "customer_id", "model": "{{ ref('customers') }}"}}, "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "schema_test", "not_null_customers_customer_id"], "unique_id": "test.jaffle_shop.not_null_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "schema_test/not_null_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "not_null_customers_customer_id", "resource_type": "test", "alias": "not_null_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "jaffle_shop": null}, "tags": ["schema"], "refs": [["customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.jaffle_shop.customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `cool-evening-299014`.`dbt_david`.`customers`\nwhere customer_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom `cool-evening-299014`.`dbt_david`.`customers`\nwhere customer_id is null\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.010942935943603516, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.617971Z", "completed_at": "2020-12-21T17:06:57.627983Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.628261Z", "completed_at": "2020-12-21T17:06:57.628269Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"namespace": null, "name": "unique", "kwargs": {"column_name": "customer_id", "model": "{{ ref('customers') }}"}}, "compiled": true, "database": "cool-evening-299014", "schema": "dbt_david", "fqn": ["jaffle_shop", "schema_test", "unique_customers_customer_id"], "unique_id": "test.jaffle_shop.unique_customers_customer_id", "package_name": "jaffle_shop", "root_path": "/Users/ldev587/Documents/QA/scripts/dbt-test", "path": "schema_test/unique_customers_customer_id.sql", "original_file_path": "models/schema.yml", "name": "unique_customers_customer_id", "resource_type": "test", "alias": "unique_customers_customer_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null, "severity": "ERROR", "jaffle_shop": null}, "tags": ["schema"], "refs": [["customers"]], "sources": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.jaffle_shop.customers"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_customers_customer_id.sql", "deferred": false, "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `cool-evening-299014`.`dbt_david`.`customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from `cool-evening-299014`.`dbt_david`.`customers`\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n", "column_name": "customer_id"}, "error": null, "status": null, "execution_time": 0.01157999038696289, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2020-12-21T17:06:57.629412Z", "completed_at": "2020-12-21T17:06:57.639104Z"}, {"name": "execute", "started_at": "2020-12-21T17:06:57.639684Z", "completed_at": "2020-12-21T17:06:57.639759Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2020-12-21T17:06:57.641853Z", "elapsed_time": 0.6831049919128418}